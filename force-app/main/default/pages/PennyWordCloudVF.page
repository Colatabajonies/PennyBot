<apex:page controller="PennyWordCloudVF_ctr" showHeader="false" showChat="false" showQuickActionVfHeader="false" sidebar="false">
    <html lang="en">
        <head>
            <meta charset="utf-8" />
            <title>Live Chat View</title>
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <apex:includeScript value="{!$Resource.penny_d3}"/>
            <apex:includeScript value="{!$Resource.penny_cloudlayout}"/>
            
        </head>
        <body id="theBody" style ="width:100%;">
            <apex:form id="theForm">
                <apex:inputHidden value="{!outputWords}" id="outputWords"/>
                <apex:actionPoller action="{!refreshData}" reRender="theForm" interval="10" oncomplete="showNewWords();"/>
            </apex:form>
            
            
            <script>
            //Create a new instance of the word cloud visualisation.
            var myWordCloud = wordCloud('body');
            
            // Encapsulate the word cloud functionality
            function wordCloud(selector) {
                
                var fill = d3.scale.category20();
                var thewidth = document.getElementById('theBody').offsetWidth;
                
                //Construct the word cloud's SVG element
                var svg = d3.select(selector).append("svg")
                .attr("width", "100%")
                .attr("height", 500)
                .append("g")
                .attr("id", "wcContainer")
                .attr("transform", "translate(" + (thewidth/2) + ",250)");
                
                
                //Draw the word cloud
                function draw(words) {
                    //svg.remove(0);
                    //svg.append("g")
                    //.attr("transform", "translate(250,250)");
                    
                    var cloud = svg.selectAll("g text")
                    .data(words, function(d) { return d.text; })
                    
                    //Entering words
                    cloud.enter()
                    .append("text")
                    .style("font-family", "Impact")
                    .style("fill", function(d, i) { return fill(i); })
                    .attr("text-anchor", "middle")
                    .attr('font-size', 1)
                    .text(function(d) { return d.text; });
                    
                    //Entering and existing words
                    cloud
                    .transition()
                    .duration(600)
                    .style("font-size", function(d) { return d.size + "px"; })
                    .attr("transform", function(d) {
                        return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
                    })
                    .style("fill-opacity", 1);
                    
                    //Exiting words
                    cloud.exit()
                    .transition()
                    .duration(200)
                    .style('fill-opacity', 1e-6)
                    .attr('font-size', 1)
                    .remove();
                }
                
                
                //Use the module pattern to encapsulate the visualisation code. We'll
                // expose only the parts that need to be public.
                return {
                    
                    //Recompute the word cloud for a new set of words. This method will
                    // asycnhronously call draw when the layout has been computed.
                    //The outside world will need to call this function, so make it part
                    // of the wordCloud return value.
                    update: function(words) {
                        d3.layout.cloud().size([thewidth, 500])
                        .words(words)
                        .padding(5)
                        .rotate(function() { return ~~(Math.random() * 2) * 90; })
                        .font("Impact")
                        .fontSize(function(d) { return d.size; })
                        .on("end", draw)
                        .start();
                    }
                }
                
            }
            
            
            //Prepare one of the sample sentences by removing punctuation,
            // creating an array of words and computing a random size attribute.
            function getWords() {
                var wordString = document.getElementById('{!$Component.theForm.outputWords}').value;
                /*var maxOccur = 1;
                for (var i = 0; i < wordString.split('|').length; i++)
                {
                    var re = new RegExp(wordString.split('|')[i], 'g');
                    var theCount = (wordString.match(re)||[]).length;
                    if (theCount > maxOccur){maxOccur = theCount;}
                }*/
                return wordString
                .replace(/[!\.,:;\?]/g, '')
                .split('|')
                .map(function(d) 
                {
                    //var re = new RegExp(d, 'g');
                    //var count = (wordString.match(re)||[]).length;
                    //return {text: d, size: 10 + (count/maxOccur) * 60};
                    return {text: d, size: 10 + Math.random() * 60};
                })
            }
            
            //This method tells the word cloud to redraw with a new set of words.
            //In reality the new words would probably come from a server request,
            // user input or some other source.
            function showNewWords() {
                document.getElementById("wcContainer").innerHTML = "";
                myWordCloud.update(getWords());
            }
            
            
            //Start cycling through the demo data
            showNewWords();
            
            </script>
        </body>
    </html>
</apex:page>